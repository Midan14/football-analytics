"""
=============================================================================
FOOTBALL ANALYTICS - RUTAS DE AUTENTICACI√ìN
=============================================================================
Endpoints para autenticaci√≥n y autorizaci√≥n de usuarios.
Incluye login, registro, gesti√≥n de tokens y control de acceso.

Funcionalidades:
- Registro de usuarios
- Login y logout
- Gesti√≥n de tokens JWT
- Verificaci√≥n de permisos
- Recuperaci√≥n de contrase√±as
"""

import logging
from datetime import datetime

from fastapi import APIRouter
from fastapi.responses import JSONResponse

# =============================================================================
# CONFIGURACI√ìN DE LOGGING
# =============================================================================
logger = logging.getLogger(__name__)

# =============================================================================
# CONFIGURACI√ìN DEL ROUTER
# =============================================================================
router = APIRouter()

# =============================================================================
# ENDPOINTS DE AUTENTICACI√ìN
# =============================================================================


@router.get(
    "/health",
    summary="Health check del m√≥dulo de autenticaci√≥n",
    description="Verificar el estado del sistema de autenticaci√≥n",
    tags=["auth", "health"],
)
async def auth_health():
    """
    Health check espec√≠fico del m√≥dulo de autenticaci√≥n
    """
    try:
        return JSONResponse(
            status_code=200,
            content={
                "status": "healthy",
                "module": "auth",
                "timestamp": datetime.now().isoformat(),
                "message": "Sistema de autenticaci√≥n operativo",
            },
        )
    except Exception as e:
        logger.error(f"‚ùå Error en health check de auth: {str(e)}")
        return JSONResponse(
            status_code=503,
            content={
                "status": "error",
                "module": "auth",
                "timestamp": datetime.now().isoformat(),
                "error": str(e),
            },
        )


# =============================================================================
# LOG DE INICIALIZACI√ìN
# =============================================================================
logger.info("üîê Router de autenticaci√≥n inicializado")
